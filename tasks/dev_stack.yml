---
- name: install and configure basic development stack

  block:

    - name: install packages
      package:
        name:
        - postgresql-client
        - postgresql-12
        - mariadb-client
        - mariadb-server
        - apache2

    - name: configure mysql users and some databases
      include_role:
        name: geerlingguy.mysql

    - name: configure postgresql users and some databases
      include_role:
        name: geerlingguy.postgresql


    - name: install uuid-ossp extension
      become: true
      become_user: postgres
      command:
        cmd: psql  -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'

    - name: install microsoft packages
      package:
        name:
        - code 
        - azure-cli

    - name: install google packages
      package:
        name:
        - google-chrome-stable


    - name: install docker packages
      package:
        name:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io


    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present


    - name: adding user  to group docker
      user:
        name: "{{user_name}}"
        groups: docker
        append: yes

    - name: install rabbitmq-server packages
      package:
        name:
        - rabbitmq-server

    - name: start rabbitmq
      service:
        name: rabbitmq-server
        state: restarted

    - name: check if influx executable is present
      shell: "which influx"
      register: influx_bin
      ignore_errors: true

    - name: install influx2 
      apt:
        deb: https://dl.influxdata.com/influxdb/releases/influxdb2-2.0.8-amd64.deb
      when: influx_bin.rc != 0

    - name: start influxdb
      service:
        name: influxdb
        state: restarted
      when: influx_bin.rc != 0

    - name: check if influx executable is present
      shell: "which telegraf"
      register: telegraf_bin
      ignore_errors: true

    - name: install telegraf
      apt:
        deb: https://dl.influxdata.com/telegraf/releases/telegraf_1.19.3-1_amd64.deb
      when: telegraf_bin.rc != 0

    - name: configure telegraf
      include_role:
        name: dj-wasabi.telegraf

    - name: check if go executable is present
      shell: "/usr/local/go/bin/go version"
      register: go_bin
      ignore_errors: true

    - name: install go-lang
      include: go_lang.yml
      when: go_bin.rc != 0

    - name: check if singularity executable is present
      shell: "which singularity"
      register: singularity_bin
      ignore_errors: true

    - name: install singularity
      include: singularity.yml
      when: singularity_bin.rc != 0


    - name: install nodejs & npm
      package:
        name:
        - nodejs
        - npm

    - name: update npm
      command:
        cmd: npm update npm


    - name: install angular
      command:
        cmd: npm install -g @angular/cli
